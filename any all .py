# وصف المشروع:
# هذا الكود يقوم بعدة عمليات على مصفوفة تحتوي على قيم عددية مع قيم مفقودة (NaN).
# يتم استخدام مكتبة numpy لتنفيذ بعض العمليات الحسابية الشرطية مثل:
# - التحقق إذا كانت أي قيمة أكبر من صفر
# - استبدال القيم بناءً على شرط معين
# - فحص وجود القيم المفقودة (NaN)
# - حفظ المصفوفة إلى ملف CSV

# استيراد المكتبات المطلوبة
import numpy as np  # لاستيراد numpy التي تدعم العمليات الحسابية على المصفوفات
import pandas as pd  # لاستيراد pandas التي تدعم التعامل مع البيانات بشكل عام

# إنشاء مصفوفة تحتوي على بعض القيم مع NaN (قيمة مفقودة)
x = np.array([1, -83, 35, -46, 78, np.nan])

# التحقق مما إذا كانت أي قيمة في المصفوفة أكبر من الصفر
# نستخدم np.any للتحقق من وجود أي قيمة أكبر من 0 في المصفوفة
print(np.any(x > 0, axis=0))  # النتيجة: True لأنه يوجد قيم أكبر من الصفر

# التحقق مما إذا كانت جميع القيم في المصفوفة أكبر من الصفر
# نستخدم np.all للتحقق إذا كان جميع القيم أكبر من 0
print(np.all(x > 0, axis=1))  # النتيجة: False لأنه توجد قيم أصغر من الصفر

# استخدام np.where لاستبدال القيم الأكبر من الصفر بـ 8، وبقية القيم بـ 0
# إذا كانت القيمة أكبر من 0، يتم استبدالها بـ 8، وإذا كانت أصغر أو تساوي 0 يتم استبدالها بـ 0
print(np.where(x > 0, 8, 0))  # النتيجة: [ 8  0  8  0  8  0]

# استخدام np.where لإرجاع إندكسات القيم التي تكون أكبر من الصفر
# ستُرجع مكان القيم التي تحقق الشرط
print(np.where(x > 0))  # النتيجة: (array([0, 2, 4]),)

# التحقق من وجود قيم NaN في المصفوفة باستخدام np.isnan
# ستُرجع True في حالة وجود NaN، و False في حالة العكس
print(np.isnan(x))  # النتيجة: [False  False  False  False  False  True]

# حفظ المصفوفة في ملف CSV باستخدام np.savetxt
# يتم حفظ المصفوفة في ملف "saved_arry.csv" باستخدام فاصل ","
np.savetxt("saved_arry.csv", x, delimiter=",")
